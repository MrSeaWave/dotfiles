# vim:fileencoding=utf-8:foldmethod=marker


# BEGIN_KITTY_THEME
# Solarized Dark
include current-theme.conf
# END_KITTY_THEME


# Set the value of kitty_mod modifier for all mappings
kitty_mod cmd+shift

# 设定编辑器
editor /opt/homebrew/bin/nvim

# Remove all default mappings.
# clear_all_shortcuts yes

# Reload config
# map cmd+ctrl+, load_config_file

# System

macos_option_as_alt yes

# Fonts 
font_family      JetBrainsMono Nerd Font
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size 15.0


# Tabs
map cmd+shift+i set_tab_title

## tab bar
# tab_bar_edge top
# tab_bar_style powerline
# tab_powerline_style slanted

## easier tab navigation
map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 999
# map cmd+left previous_tab
# map cmd+right next_tab


# Windows

## Create and Delete
map ctrl+shift+w close_window

## layouts
enabled_layouts splits:split_axis=horizontal
# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other

# --cwd to open the same folder
map cmd+shift+d launch --location=hsplit --cwd=current

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
map cmd+d launch --location=vsplit --cwd=current

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side if the existing window is wide or
# one above the other if the existing window is tall.
map f4 launch --location=split

# Rotate the current split, changing its split axis from vertical to
# horizontal or vice versa
map f7 layout_action rotate


# Move the active window in the indicated direction
map shift+up move_window up
map shift+left move_window left
map shift+right move_window right
map shift+down move_window down

# Move the active window to the indicated screen edge
map ctrl+shift+up layout_action move_to_screen_edge top
map ctrl+shift+left layout_action move_to_screen_edge left
map ctrl+shift+right layout_action move_to_screen_edge right
map ctrl+shift+down layout_action move_to_screen_edge bottom

## Navigate windows
# Switch focus to the neighboring window in the indicated direction
map ctrl+left neighboring_window left
map ctrl+right neighboring_window right
map ctrl+up neighboring_window up
map ctrl+down neighboring_window down
map cmd+[ prev_window
map cmd+] next_window


# Search
# https://github.com/kovidgoyal/kitty/issues/718#issuecomment-756800986
# https://github.com/mikesmithgh/kitty-scrollback.nvim
# 影响 nvim，禁用
# map ctrl+f launch --type=overlay --stdin-source=@screen_scrollback /opt/homebrew/bin/fzf --no-sort --no-mouse --exact -i
# 原生 搜索
# map kitty_mod+h show_scrollback

allow_remote_control yes
listen_on unix:/tmp/kitty
shell_integration enabled


# kitty-scrollback.nvim Kitten alias
action_alias kitty_scrollback_nvim kitten /Users/sea/.local/share/nvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py

# Browse scrollback buffer in nvim
map kitty_mod+h kitty_scrollback_nvim
# Browse output of the last shell command in nvim
map kitty_mod+g kitty_scrollback_nvim --config ksb_builtin_last_cmd_output
# Show clicked command output in nvim
mouse_map ctrl+shift+right press ungrabbed combine : mouse_select_command_output : kitty_scrollback_nvim --config ksb_builtin_last_visited_cmd_output

